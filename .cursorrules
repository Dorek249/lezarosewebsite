# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

## Lessons

- Always ensure proper TypeScript types for all components and functions
- Follow Next.js 15 best practices for routing and data fetching
- Implement proper error handling and loading states
- Use Zod for robust form validation and type safety

## Scratchpad

### Phase 1: Project Setup and Foundation
- [X] 1. Project Structure and Configuration
  - [X] Initialize Next.js 15 project with TypeScript
  - [X] Install core dependencies
  - [X] Install and configure dependencies:
    - [X] Shadcn UI components
    - [X] Lucide icons
    - [X] Zod for validation
    - [X] Zustand for state management
    - [X] Recharts for analytics
    - [X] Resend for emails
    - [X] Uploadthing for file uploads
    - [X] Prisma ORM
    - [X] PostgreSQL database
    - [X] NextAuth.js beta for authentication
    - [X] Stripe for payments
    
  - [X] Set up environment variables
  - [X] Configure Tailwind and Shadcn UI

- [ ] 2. Database and Authentication
  - [ ] Set up PostgreSQL database
  - [ ] Configure Prisma schema:
    - Users and roles
    - Products and categories
    - Orders and payments
    - Reviews and ratings
  - [ ] Implement NextAuth.js authentication:
    - Email/Password
    - OAuth providers (Google, GitHub)
    - Admin role management

### Phase 2: Admin Dashboard Development
- [ ] 3. Admin Interface
  - [ ] Create dashboard layout
  - [ ] Build admin components:
    - Sidebar navigation
    - Header with notifications
    - Overview statistics
    - Data tables
  - [ ] Implement admin authentication guard

- [ ] 4. Product Management
  - [ ] Product CRUD operations
  - [ ] Category management
  - [ ] Inventory tracking
  - [ ] Image upload with Uploadthing
  - [ ] Bulk operations
  - [ ] Product variants

- [ ] 5. Analytics and Reporting
  - [ ] Sales dashboard with Recharts
  - [ ] Revenue analytics
  - [ ] Customer insights
  - [ ] Inventory reports
  - [ ] Export functionality

### Phase 3: Store Frontend
- [ ] 6. User Interface
  - [ ] Homepage design
  - [ ] Product listing pages
  - [ ] Product detail pages
  - [ ] Shopping cart
  - [ ] Checkout process
  - [ ] User profile
  - [ ] Search functionality

- [ ] 7. State Management
  - [ ] Set up Zustand stores:
    - Cart store
    - User preferences
    - Filter/search state
    - UI state

- [ ] 8. Shopping Features
  - [ ] Cart management
  - [ ] Wishlist
  - [ ] Order tracking
  - [ ] Reviews and ratings
  - [ ] Related products

### Phase 4: Payment and Communication
- [ ] 9. Payment Integration
  - [ ] Stripe setup
  - [ ] Payment processing
  - [ ] Order management
  - [ ] Refund handling
  - [ ] Invoice generation

- [ ] 10. Email System
  - [ ] Configure Resend
  - [ ] Email templates:
    - Order confirmation
    - Shipping updates
    - Password reset
    - Marketing emails
  - [ ] Notification system

### Phase 5: Testing and Optimization
- [ ] 11. Testing
  - [ ] Unit tests
  - [ ] Integration tests
  - [ ] E2E tests
  - [ ] Performance testing

- [ ] 12. Performance
  - [ ] Image optimization
  - [ ] Code splitting
  - [ ] Caching strategy
  - [ ] API optimization
  - [ ] SEO implementation

### Phase 6: Deployment and Documentation
- [ ] 13. Deployment
  - [ ] Production environment setup
  - [ ] CI/CD pipeline
  - [ ] Monitoring and logging
  - [ ] Backup strategy

- [ ] 14. Documentation
  - [ ] API documentation
  - [ ] User guides
  - [ ] Admin manual
  - [ ] Deployment guide
  - [ ] Maintenance procedures

### Current Focus
Currently working on Phase 1: Project Setup and Foundation
Next steps:
1. Complete project structure setup
2. Configure Shadcn UI components
3. Set up Prisma schema and database connection
